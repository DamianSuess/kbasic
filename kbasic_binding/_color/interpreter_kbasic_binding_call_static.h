case pcode___color__GETPROPERTY_White:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::white ); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Black:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::black ); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Red:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::red ); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkRed:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkRed); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Green:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::green); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Blue:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::blue); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkBlue:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkBlue); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Cyan:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::cyan); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkCyan:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkCyan); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Magenta:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::magenta); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkMagenta:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkMagenta); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Yellow:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::yellow); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkYellow:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkYellow); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Gray:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::gray); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_DarkGray:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::darkGray); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_LightGray:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::lightGray); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Color0:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::color0); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Color1:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::color1); if (bReturn) pushStack(p); else delete p; break; }
case pcode___color__GETPROPERTY_Transparent:{ interpreter_parameter *p = new interpreter_parameter( (_color *) Qt::transparent); if (bReturn) pushStack(p); else delete p; break; }

